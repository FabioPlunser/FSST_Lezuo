/ int decryption_setup(char* key, char* IV, char* Ciphertext)
// {
//     printf("Key length: %li\n", strlen(key));
//     printf("IV length: %li\n", strlen(IV));

//     if((strlen(key)!=16)){
//         printf("Key besitzt nicht richtige laenge\n");
//         printf("Neuer Key: ");
//         scanf("%s", key);
//     }              
//     if((strlen(IV)!=16))
//     {
//         printf("IV besitzt nicht richtige laenge\n");
//         printf("Neuer IV: ");
//         scanf("%s", IV);
//     }

//     int decryptedtext_len, ciphertext_len;

//     if(strlen(Ciphertext)>=128)
//     {
//         printf("Ciphertext is zu lang");
//         return 1;
//     }
//     else
//     {
//         unsigned int cypher_in_hex(char*);

        
//         unsigned char decryptedtext[128];
//         decryptedtext_len = do_decrypt(Ciphertext, sizeof(Ciphertext)/4, key, IV, decryptedtext);
//         decryptedtext[decryptedtext_len] = '\0';
//         printf("EVP:\nDecrypted test is: %s\n", decryptedtext);
        
//         AES_KEY dec_key;
//         AES_set_decrypt_key(key, sizeof(key)*8, &dec_key);
//         AES_cbc_encrypt(Ciphertext, decryptedtext, sizeof(Ciphertext)/4, &dec_key, IV, AES_DECRYPT);
//         printf("\nAES_KEY:\nDecrypted test is: %s\n", decryptedtext);
//     }
// }

// int encryption_setup(char* key, char* IV, char* Plaintext)
// {
//     printf("Key length: %li\n", strlen(key));
//     printf("IV length: %li\n", strlen(IV));
//     if((strlen(key)!=16)){
//         printf("Key besitzt nicht richtige laenge\n");
//         printf("Neuer Key: ");
//         scanf("%s", key);
//     }              
//     if((strlen(IV)!=16))
//     {
//         printf("IV besitzt nicht richtige laenge\n");
//         printf("Neuer IV: ");
//         scanf("%s", IV);
//     }
    
//     printf("Key: %s\n", key);
//     printf("IV: %s\n", IV);
//     char* ciphertext;
//     int ciphertext_len;
//     ciphertext_len = do_encrypt(Plaintext, strlen((char*)Plaintext), key, IV, ciphertext);
//     printf("Ciphertext ist: \n");
//     BIO_dump_fp (stdout, (const char *)ciphertext, ciphertext_len);
//     printf("Ciphertext: %s\n", ciphertext);
//     return 1;
// }



// char* key = malloc(16); 
    // char* IV = malloc(16);
    // char* Plaintext = malloc(128);
    // char* Ciphertext = malloc(128);

    // int choose;
    // printf("AES-128, encrypt und decrypt\n\n");
    // printf("1 für encrypt\n2 für decrypt\n");
    // scanf("%i", &choose);

    // if(choose == 1)
    // {
    //     printf("Key: ");
    //     scanf("%s", key);

    //     printf("IV: ");
    //     scanf("%s", IV);

    //     printf("Text der zu encrypten ist: ");
    //     scanf("%s", Plaintext);
    //     printf("\n\n");
    //     encryption_setup(key, IV, Plaintext);
    // }
    // if(choose == 2)
    // {
    //     printf("Key: ");
    //     scanf("%s", key);

    //     printf("IV: ");
    //     scanf("%s", IV);

    //     printf("Ciphertext: ");
    //     scanf("%s", Ciphertext);
    //     decryption_setup(key, IV, Ciphertext);
    // }
    // printf("Nichts ausgewählt\n");